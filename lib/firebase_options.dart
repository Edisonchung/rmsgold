// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyD3Ew35StZUX8Y3KnsqgM6wYY94gwzfmF4',
    authDomain: 'rmsgold-28441.firebaseapp.com',
    projectId: 'rmsgold-28441',
    storageBucket: 'rmsgold-28441.firebasestorage.app',
    messagingSenderId: '541263514779',
    appId: '1:541263514779:web:47eac110537294b3710a3e',
    measurementId: 'G-VQ5E0DCYYS', // Optional - for Google Analytics
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY_HERE',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    appId: 'YOUR_ANDROID_APP_ID',
    measurementId: 'YOUR_MEASUREMENT_ID', // Optional - for Google Analytics
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY_HERE',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    appId: 'YOUR_IOS_APP_ID',
    measurementId: 'YOUR_MEASUREMENT_ID', // Optional - for Google Analytics
    iosBundleId: 'com.rms.rmsgold',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_MACOS_API_KEY_HERE',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    appId: 'YOUR_MACOS_APP_ID',
    measurementId: 'YOUR_MEASUREMENT_ID', // Optional - for Google Analytics
    iosBundleId: 'com.rms.rmsgold',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'YOUR_WINDOWS_API_KEY_HERE',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    appId: 'YOUR_WINDOWS_APP_ID',
    measurementId: 'YOUR_MEASUREMENT_ID', // Optional - for Google Analytics
  );
}

// Example of how your actual configuration will look after Firebase setup:
/*
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyB1234567890abcdefghijklmnopqrstuvwxyz',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: '123456789012',
    appId: '1:123456789012:web:abcdef1234567890123456',
    measurementId: 'G-ABCDEFGHIJ',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyC9876543210zyxwvutsrqponmlkjihgfedcba',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: '123456789012',
    appId: '1:123456789012:android:fedcba0987654321098765',
    measurementId: 'G-ABCDEFGHIJ',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyD5555555555555555555555555555555555',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: '123456789012',
    appId: '1:123456789012:ios:1234567890abcdef1234567',
    measurementId: 'G-ABCDEFGHIJ',
    iosBundleId: 'com.rms.rmsgold',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyE7777777777777777777777777777777777',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: '123456789012',
    appId: '1:123456789012:ios:abcdef1234567890abcdef12',
    measurementId: 'G-ABCDEFGHIJ',
    iosBundleId: 'com.rms.rmsgold',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyF9999999999999999999999999999999999',
    authDomain: 'rmsgold.firebaseapp.com',
    projectId: 'rmsgold',
    storageBucket: 'rmsgold.appspot.com',
    messagingSenderId: '123456789012',
    appId: '1:123456789012:web:9876543210fedcba09876543',
    measurementId: 'G-ABCDEFGHIJ',
  );
}
*/
